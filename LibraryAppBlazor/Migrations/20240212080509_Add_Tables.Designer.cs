// <auto-generated />
using System;
using LibraryAppBlazor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryAppBlazor.Migrations
{
    [DbContext(typeof(LibraryAppContext))]
    [Migration("20240212080509_Add_Tables")]
    partial class Add_Tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryAppBlazor.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8aa2f6bf-9660-413c-9197-914eedc68646"),
                            Author = "J.K.Rowling",
                            IsAvailable = true,
                            Title = "Harry Potter a Kameň mudrcov"
                        },
                        new
                        {
                            Id = new Guid("6e5fb9df-a805-4c99-8546-12a910a03165"),
                            Author = "Harper Lee",
                            IsAvailable = true,
                            Title = "Zabiť vtáča robáka"
                        },
                        new
                        {
                            Id = new Guid("55cab9d8-1f84-44b7-ab3c-259b7a923f9d"),
                            Author = "George Orwell",
                            IsAvailable = true,
                            Title = "1984"
                        },
                        new
                        {
                            Id = new Guid("fc55b64f-7b79-4331-912a-37c11ea1064a"),
                            Author = "F. Scott Fitzgerald",
                            IsAvailable = true,
                            Title = "Veľký Gatsby"
                        },
                        new
                        {
                            Id = new Guid("a86e7bdc-89b2-4e2e-8f04-7d4b44a6612b"),
                            Author = "Jane Austen",
                            IsAvailable = true,
                            Title = "Pýcha a predsudok"
                        });
                });

            modelBuilder.Entity("LibraryAppBlazor.Models.CheckOutRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("MemberId");

                    b.ToTable("CheckOutRecord");
                });

            modelBuilder.Entity("LibraryAppBlazor.Models.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b9d34651-6e55-4985-8390-7d80c0e27090"),
                            DateOfBirth = new DateOnly(1985, 3, 12),
                            Firstname = "Ján",
                            IdentityCardNumber = "123456789",
                            Surname = "Novák"
                        },
                        new
                        {
                            Id = new Guid("892000ab-1040-4a2e-80f6-658cb4d426c6"),
                            DateOfBirth = new DateOnly(1990, 6, 25),
                            Firstname = "Eva",
                            IdentityCardNumber = "987654321",
                            Surname = "Svobodová"
                        },
                        new
                        {
                            Id = new Guid("93a4c59b-01b4-49ea-a384-ce2436f565d3"),
                            DateOfBirth = new DateOnly(1982, 8, 8),
                            Firstname = "Peter",
                            IdentityCardNumber = "456123789",
                            Surname = "Kováč"
                        },
                        new
                        {
                            Id = new Guid("1d4db229-b8ad-4439-adc8-648d8e809a29"),
                            DateOfBirth = new DateOnly(1976, 1, 17),
                            Firstname = "Zuzana",
                            IdentityCardNumber = "789456123",
                            Surname = "Horváthová"
                        },
                        new
                        {
                            Id = new Guid("2bc56910-78b1-4c7a-b95e-5e4051b4e5a3"),
                            DateOfBirth = new DateOnly(1995, 12, 3),
                            Firstname = "Marta",
                            IdentityCardNumber = "321654987",
                            Surname = "Ďuricová"
                        });
                });

            modelBuilder.Entity("LibraryAppBlazor.Models.CheckOutRecord", b =>
                {
                    b.HasOne("LibraryAppBlazor.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryAppBlazor.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Member");
                });
#pragma warning restore 612, 618
        }
    }
}
